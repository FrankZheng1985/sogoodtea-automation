name: SoGoodTea Weekly Promotion

on:
  schedule:
    # 每周一上午9点运行 (UTC时间)
    - cron: '0 9 * * 1'
  workflow_dispatch: # 允许手动触发

jobs:
  trigger-dify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Call Dify Workflow API
      id: dify
      run: |
        response=$(curl -X POST "https://api.dify.ai/v1/workflows/8e8aa058-7d7e-4f20-bfdb-8725c7e3edef/run" \
        -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
        -H "Content-Type: application/json" \
        -d '{
          "inputs": {
            "week_number": 1,
            "target_languages": "英语,德语,法语",
            "platforms": "Facebook,Instagram,Twitter"
          },
          "user": "fengzheng9@icloud.com",
          "response_mode": "blocking"
        }')
        
        echo "Dify Response: $response"
        echo "dify_response<<EOF" >> $GITHUB_OUTPUT
        echo "$response" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Parse Dify Response
      id: parse
      run: |
        # 检查Dify API是否成功
        if echo '${{ steps.dify.outputs.dify_response }}' | jq -e '.code' > /dev/null; then
          echo "Dify API returned error: ${{ steps.dify.outputs.dify_response }}"
          echo "content_result=null" >> $GITHUB_OUTPUT
          echo "image_url=null" >> $GITHUB_OUTPUT
          echo "english_content=null" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        # 提取内容结果
        content_result=$(echo '${{ steps.dify.outputs.dify_response }}' | jq -r '.data.outputs.content_result')
        echo "content_result=$content_result" >> $GITHUB_OUTPUT
        
        # 提取图片URL
        image_url=$(echo '${{ steps.dify.outputs.dify_response }}' | jq -r '.data.outputs.generated_images[0].url')
        echo "image_url=$image_url" >> $GITHUB_OUTPUT
        
        # 提取英语内容 - 修复jq语法，用引号包围中文字符
        english_content=$(echo '${{ steps.dify.outputs.dify_response }}' | jq -r '.data.outputs.content_result' | jq -r '.content_by_language."英语"."Facebook/Instagram"')
        echo "english_content=$english_content" >> $GITHUB_OUTPUT

    - name: Post to Facebook
      run: |
        # 检查是否有有效内容
        if [ "${{ steps.parse.outputs.english_content }}" = "null" ] || [ "${{ steps.parse.outputs.english_content }}" = "" ]; then
          echo "No valid content to post to Facebook"
          exit 0
        fi
        
        # 发布文字内容
        curl -X POST "https://graph.facebook.com/v18.0/${{ secrets.FACEBOOK_PAGE_ID }}/feed" \
        -H "Authorization: Bearer ${{ secrets.FACEBOOK_ACCESS_TOKEN }}" \
        -H "Content-Type: application/json" \
        -d '{
          "message": "${{ steps.parse.outputs.english_content }}"
        }'
        
        # 发布图片（如果有）
        if [ "${{ steps.parse.outputs.image_url }}" != "null" ] && [ "${{ steps.parse.outputs.image_url }}" != "" ]; then
          curl -X POST "https://graph.facebook.com/v18.0/${{ secrets.FACEBOOK_PAGE_ID }}/photos" \
          -H "Authorization: Bearer ${{ secrets.FACEBOOK_ACCESS_TOKEN }}" \
          -F "url=${{ steps.parse.outputs.image_url }}" \
          -F "message=${{ steps.parse.outputs.english_content }}"
        fi

    - name: Log Results
      run: |
        echo "Content posted to Facebook successfully!"
        echo "English content: ${{ steps.parse.outputs.english_content }}"
        echo "Image URL: ${{ steps.parse.outputs.image_url }}"
